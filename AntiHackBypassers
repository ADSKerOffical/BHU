-- 1) anti adonis, remote spy finder, anti hook bypass
local getthreadidentity = getthreadidentity or syn.get_thread_identity or get_thread_identity or get_thread_identify or getthreadidentify
local isadonis = false

for i, v in next, getgc(true) do
   if typeof(v) == "table" and rawget(v, "Detected") and typeof(rawget(v, "Detected")) == "function" then
isadonis = true
  end
end

if isadonis == true then
local getinfo = getinfo or debug.getinfo
local DEBUG = false
local Hooked = {}

local Detected, Kill

setthreadidentity(2)

for i, v in getgc(true) do
    if typeof(v) == "table" then
        local DetectFunc = rawget(v, "Detected")
        local KillFunc = rawget(v, "Kill")
    
        if typeof(DetectFunc) == "function" and not Detected then
            Detected = DetectFunc
            
            local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
                if Action ~= "_" then
                    if DEBUG then
                        warn("Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}")
                    end
                end
                
                return true
            end)

            table.insert(Hooked, Detected)
        end

        if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
            Kill = KillFunc
            local Old; Old = hookfunction(Kill, function(Info)
                if DEBUG then
                    warn("Adonis AntiCheat tried to kill (fallback): {Info}")
                end
            end)

            table.insert(Hooked, Kill)
        end
    end
end

local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
    local LevelOrFunc, Info = ...

    if Detected and LevelOrFunc == Detected then
        if DEBUG then
            warn("zins | adonis bypassed")
        end

        return coroutine.yield(coroutine.running())
    end
    
    return Old(...)
end))

setthreadidentity(7)
end

-- 2) slap battles and other anti cheat
if game.PlaceId == 6403373529 then
local Namecall
 Namecall = hookmetamethod(game, '__namecall', function(self, ...)
   if getnamecallmethod() == 'FireServer' and tostring(self) == 'Ban' then
       return
   elseif getnamecallmethod() == 'FireServer' and tostring(self) == 'WalkSpeedChanged' then
       return
   elseif getnamecallmethod() == 'FireServer' and tostring(self) == 'AdminGUI' then
       return
   end
   return Namecall(self, ...)
 end)
end

if game.PlaceId == 286090429 then
loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/Test2/main/Test2"))()
end
  
if game.PlaceId == 2788229376 then
local Detectors = {CHECKER_1 = true, TeleportDetect = true, OneMoreTime = true, BANREMOTE = true, KICKREMOTE = true, PERMAIDBAN = true, BreathingHAMON = true}

local mt = getrawmetatable(game)
local backupnamecall = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(...)
    local method = getnamecallmethod()
    local args = {...}

    if (method == "FireServer" and tostring(args[1]) == "MainEvent" and Detectors[args[2]]) then
        return wait(math.huge)
    end

    if (not checkcaller() and getfenv(1).crash ~= nil and getfenv(1).checkChild ~= nil) then
        getcallingscript():Destroy()
        return wait(math.huge)
    end

    return backupnamecall(...)
end)

setreadonly(mt, true)
  end
