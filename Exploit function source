for i, v in next, getgenv() do
  if i ~= "getgenv" and i ~= "loadstring" then
getgenv().v = nil
  end
end

getgenv().newcclosure = function(func)
 local loop = coroutine.wrap(function(...)
  local tabl = {coroutine.yield()}
   while true do
     tabl = {coroutine.yield(func(unpack(tabl)))}
   end
 end)
  
  loop()
  return loop
end

getgenv().newcclosure = newcclosure(newcclosure)

getgenv().isnetworkowner = newcclosure(function(part)
  return (part.ReceiveAge == 0 and gethiddenproperty(part, "NetworkIsSleeping") == false)
end)

getgenv().setsimulationradius = newcclosure(function(num1, num2)
   sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", num1)
   sethiddenproperty(game.Players.LocalPlayer, "MaxSimulationRadius", num2)
end)

getgenv().getfflag = newcclosure(function(flag)
  return game:GetFastFlag(flag)
end)

getgenv().setfflag = newcclosure(function(flag, value)
  game:SetFastFlagForTesting(flag, value)
end)

getgenv().httpget = newcclosure(function(link)
  return request({Url = link, Method = "GET",}).Body
end)

getgenv().isreadonly = newcclosure(function(tabl)
  return table.isfrozen(tabl)
end)

getgenv().clonefunction = newcclosure(function(func)
    return function(...)
        return func(...)
    end
end)

getgenv().keypress = newcclosure(function(bytecode)
 local keycode = string.char(bytecode)
 game:GetService("VirtualInputManager"):SendKeyEvent(true, tostring(keycode), false , game)
end)

getgenv().keyrelease = newcclosure(function(Key)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode[Key], false, game)
end)

getgenv().mouse1press = newcclosure(function()
  local Mouse = game.Players.LocalPlayer:GetMouse()
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(Mouse.X, Mouse.Y, 0, true, game, 0)
end)

getgenv().mouse1release = newcclosure(function()
  local Mouse = game.Players.LocalPlayer:GetMouse()
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(Mouse.X, Mouse.Y, 0, false, game, 0)
end)

getgenv().mouse1click = newcclosure(function()
    mouse1press()
    mouse1release()
end)

getgenv().mouse2press = newcclosure(function()
  local Mouse = game.Players.LocalPlayer:GetMouse()
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(Mouse.X, Mouse.Y, 1, true, game, 0)
end)

getgenv().mouse2release = newcclosure(function()
 local Mouse = game.Players.LocalPlayer:GetMouse()
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(Mouse.X, Mouse.Y, 1, false, game, 0)
end)

getgenv().mouse2click = newcclosure(function()
    mouse2press()
    mouse2release()
end)

getgenv().mousemoveabs = newcclosure(function(x, y)
    game:GetService("VirtualInputManager"):SendMouseWheelEvent(x, y, false, game)
end)

getgenv().mousemoverel = newcclosure(function(x, y)
    mousemoveabs(workspace.CurrentCamera.ViewportSize.X * x, workspace.CurrentCamera.ViewportSize.Y * y)
end)

getgenv().iscclosure = newcclosure(function(func)
  return debug.info(func, "s") == "[C]"
end)

getgenv().islclosure = newcclosure(function(fucn)
  return debug.info(func, "s") ~= "[C]"
end)

getgenv().cloneref = newcclosure(function(o)
  return o
end)

getgenv().getobjects = newcclosure(function(id)
  return game:GetService("InsertService"):LoadLocalAsset(id)
end)

game:GetService("UserInputService").WindowFocused:Connect(function()
    Active = true
end)

game:GetService("UserInputService").WindowFocusReleased:Connect(function()
    Active = false
end)

getgenv().isrbxactive = newcclosure(function()
  return Active
end)

getgenv().getrenderproperty = newcclosure(function(class, prop)
  return class[prop]
end)

getgenv().setrenderproperty = newcclosure(function(class, prop, val)
  class[prop] = value
end)

getgenv().getinstances = newcclosure(function()
    return game:GetDescendants()
end)

getgenv().gethiddenproperty = newcclosure(function(class, property)
    return game:GetService("UGCValidationService"):GetPropertyValue(class, property)
end)

getgenv().gethwid = newcclosure(function()
  return game:GetService("RbxAnalyticsService"):GetClientId()
end)

getgenv().identifyexecutor = newcclosure(function()
  return "Budgify"
end)

getgenv().getexecutorname = newcclosure(function()
  return "Budgify 1.0"
end)

getgenv().randomstring = newcclosure(function(num)
 local str = {}
  for i = 1, num do
    str[i] = string.char(math.random(97, 122))
  end
 return table.concat(str)
end)

getgenv().gethui = newcclosure(function()
 local scr = Instance.new("ScreenGui", game.CoreGui)
 scr.Name = randomstring(10)
 
 local scr2 = Instance.new("ScreenGui", scr)
 scr2.Name = randomstring(10)
 return scr2
end)

getgenv().hookfunction = newcclosure(function(old, hook)
    local funcName = debug.info(old, "n")
    getgenv()[funcName] = function(...)
        return hook(...)
    end
    return old
end)

getgenv().hookmetamethod = newcclosure(function(obj, method, func)
      return hookfunction(getrawmetatable(obj)[method], func)
end)

getgenv().unlockmodulescript = newcclosure(function() end)

getgenv().getcallingscript = newcclosure(function()
 local s = debug.info(1, "s")
  for i, v in next, game:GetDescendants() do
    if v:GetFullName() == s then return v end
  end
 return nil
end)

getgenv().gethiddenproperty = newcclosure(function(class, property)
    return game:GetService("UGCValidationService"):GetPropertyValue(class, property)
end)

getgenv().getmodules = newcclosure(function()
  local tabl = {}
    for _, modul in next, game:GetDescendants() do
      if modul:IsA("ModuleScript") then
        table.insert(tabl, modul)
      end
    end
  return tabl
end)

getgenv().getscripts = newcclosure(function()
  local tabl = {}
    for _, scr in next, game:GetDescendants() do
      if scr:IsA("LocalScript") then
        table.insert(tabl, scr)
      end
    end
  return tabl
end)

getgenv().iswritable = newcclosure(function(tabl)
  return not table.isfrozen(tabl)
end)

getgenv().issynapsefunction = newcclosure(function(func)
  
end)
